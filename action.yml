name: Install cosmocc
description: Install cosmocc on GitHub Actions
author: Brett Jia

inputs:
  version:
    description: Cosmopolitan release version
    required: true
    default: latest

runs:
  using: composite

  steps:
    - name: Download and extract
      shell: bash
      run: |
        VERSION="${{ inputs.version }}"
        if [[ "${VERSION}" == "latest" ]]; then
          VERSION=$(curl --retry 15 --retry-delay 5 -s -S -H "Authorization: Bearer ${{ github.token }}" https://api.github.com/repos/jart/cosmopolitan/releases | jq -r .[0].tag_name)
        fi

        INSTALL_DIR="${{ runner.temp }}/cosmocc-${VERSION}"
        INSTALL_DIR_FORMATTED=${INSTALL_DIR}
        if [[ "${{ runner.os }}" == "Windows" ]]; then
          INSTALL_DIR_FORMATTED=$(cygpath -w ${INSTALL_DIR})
        fi
        echo "Using install dir ${INSTALL_DIR}"

        rm -rf ${INSTALL_DIR}
        mkdir -p ${INSTALL_DIR}
        cd ${INSTALL_DIR}

        echo "Downloading cosmocc ${VERSION}"
        curl --retry 15 --retry-delay 5 -s -S -f -L -o cosmocc.zip https://github.com/jart/cosmopolitan/releases/download/${VERSION}/cosmocc-${VERSION}.zip

        if [[ "${{ runner.os }}" == "Windows" ]]; then
          7z.exe x cosmocc.zip
          echo ${INSTALL_DIR_FORMATTED}\\bin >> $GITHUB_PATH
        else
          unzip -qq cosmocc.zip
          echo ${INSTALL_DIR_FORMATTED}/bin >> $GITHUB_PATH
          chmod +x ${INSTALL_DIR_FORMATTED}/bin/cosmoranlib
        fi

        if [[ "${{ runner.os}}" == "Linux" ]]; then
          echo "Fixing binfmt_misc"
          APE_PATH=$(realpath ${INSTALL_DIR_FORMATTED}/bin/ape-$(uname -m).elf)
          sudo sh -c "echo ':APE:M::MZqFpD::${APE_PATH}:' >/proc/sys/fs/binfmt_misc/register"
          sudo sh -c "echo ':APE-jart:M::jartsr::${APE_PATH}:' >/proc/sys/fs/binfmt_misc/register"
        fi

        curl --retry 15 --retry-delay 5 -s -S -f -L -o LICENSE https://raw.githubusercontent.com/jart/cosmopolitan/${VERSION}/LICENSE

    - name: Verify cosmocc version
      shell: bash
      run: |
        cosmocc --version